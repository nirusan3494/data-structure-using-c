#include <stdio.h>
#include <stdlib.h>

// Define the node structure
struct node {
    int data;
    struct node* next;
};

struct node* head = NULL;

// Function to insert a node at the end
void insert(int value) {
    struct node* newnode = (struct node*)malloc(sizeof(struct node));
    newnode->data = value;
    newnode->next = NULL;

    if (head == NULL) {
        head = newnode;
    } else {
        struct node* temp = head;
        while (temp->next != NULL)
            temp = temp->next;
        temp->next = newnode;
    }
}

// Function to display the linked list
void display() {
    struct node* temp = head;
    if (temp == NULL) {
        printf("List is empty.\n");
        return;
    }
    printf("Linked List: ");
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}

void removeDuplicates() {
    if(head == NULL) {
        return;
    }

    struct node* temp = head;

    while(temp != NULL) {
        struct node* ptr = temp;
        while(ptr->next != NULL) {
            if(temp->data == ptr->next->data) {
                ptr->next = ptr->next->next; // remove duplicate
            } else {
                ptr = ptr->next;
            }
        }
        temp = temp->next;
    }
}

//10 → 20 → 10 → 30 → 20 → 40 → NULL


int main() {
    // Example input
    insert(10);
    insert(20);
    insert(10);
    insert(30);
    insert(20);
    insert(40);

    printf("Before removing duplicates:\n");
    display();

    removeDuplicates();

    printf("After removing duplicates:\n");
    display();

    return 0;
}
