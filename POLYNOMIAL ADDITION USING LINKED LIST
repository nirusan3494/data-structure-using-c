#include <stdio.h>
#include <stdlib.h>

struct node {
    float coeff;
    int expo;
    struct node *link;
};

struct node *head = NULL;

void insert(float co, int ex) {
    struct node *temp;
    struct node *newnode = (struct node *)malloc(sizeof(struct node));
    newnode->coeff = co;
    newnode->expo = ex;
    newnode->link = NULL;

    if (head == NULL || ex > head->expo) {
        newnode->link = head;
        head = newnode;
    } else {
        temp = head;
        while (temp->link != NULL && ex < temp->link->expo) {
            temp = temp->link;
        }
        newnode->link = temp->link;
        temp->link = newnode;
    }
}

void insertTo(struct node **h, float co, int ex) {
    struct node *temp;
    struct node *newnode = (struct node *)malloc(sizeof(struct node));
    newnode->coeff = co;
    newnode->expo = ex;
    newnode->link = NULL;

    if (*h == NULL || ex > (*h)->expo) {
        newnode->link = *h;
        *h = newnode;
    } else {
        temp = *h;
        while (temp->link != NULL && ex < temp->link->expo) {
            temp = temp->link;
        }
        newnode->link = temp->link;
        temp->link = newnode;
    }
}

void create() {
    int n, i, expo;
    float coeff;

    printf("Enter the number of terms: ");
    scanf("%d", &n);

    for (i = 0; i < n; i++) {
        printf("Enter the coefficient for term %d: ", i + 1);
        scanf("%f", &coeff);
        printf("Enter the exponent for term %d: ", i + 1);
        scanf("%d", &expo);
        insert(coeff, expo);
    }
}

void print(struct node *h) {
    if (h == NULL) {
        printf("No polynomial\n");
    } else {
        struct node *temp = h;
        while (temp != NULL) {
            printf("(%.1fx^%d)", temp->coeff, temp->expo);
            temp = temp->link;
            if (temp != NULL)
                printf(" + ");
            else
                printf("\n");
        }
    }
}

void polyadd(struct node *head1, struct node *head2) {
    struct node *ptr1 = head1;
    struct node *ptr2 = head2;
    struct node *head3 = NULL;

    while (ptr1 != NULL && ptr2 != NULL) {
        if (ptr1->expo == ptr2->expo) {
            insertTo(&head3, ptr1->coeff + ptr2->coeff, ptr1->expo);
            ptr1 = ptr1->link;
            ptr2 = ptr2->link;
        } else if (ptr1->expo > ptr2->expo) {
            insertTo(&head3, ptr1->coeff, ptr1->expo);
            ptr1 = ptr1->link;
        } else {
            insertTo(&head3, ptr2->coeff, ptr2->expo);
            ptr2 = ptr2->link;
        }
    }

    while (ptr1 != NULL) {
        insertTo(&head3, ptr1->coeff, ptr1->expo);
        ptr1 = ptr1->link;
    }

    while (ptr2 != NULL) {
        insertTo(&head3, ptr2->coeff, ptr2->expo);
        ptr2 = ptr2->link;
    }

    printf("Added Polynomial is: ");
    print(head3);
}

int main() {
    struct node *head1 = NULL;
    struct node *head2 = NULL;

    printf("Enter the first polynomial:\n");
    head = NULL;
    create();
    head1 = head;

    printf("Enter the second polynomial:\n");
    head = NULL;
    create();
    head2 = head;

    printf("First Polynomial: ");
    print(head1);
    printf("Second Polynomial: ");
    print(head2);

    polyadd(head1, head2);

    return 0;
}
